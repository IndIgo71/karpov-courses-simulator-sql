/*
Произведите замену списков с id товаров из таблицы orders на списки с наименованиями товаров. Наименования возьмите из таблицы products. Колонку с новыми списками наименований назовите product_names. 

Добавьте в запрос оператор LIMIT и выведите только первые 1000 строк результирующей таблицы.

Поля в результирующей таблице: order_id, product_names

Пояснение:

Для решения задачи вам нужно сделать unnest колонки product_ids, соединить промежуточный результат с таблицей products для получения наименований товаров, а затем сделать обратно группировку с агрегацией в список наименований. 

Для того чтобы сделать агрегацию значений в колонке в список, необходимо воспользоваться функцией array_agg.

array_agg — это продвинутая агрегирующая функция, которая собирает все значения в указанном столбце в единый список (ARRAY). По сути array_agg — это операция, обратная unnest, её синтаксис ничем не отличается от синтаксиса остальных агрегирующих функций:

SELECT column_1, array_agg(column_2) AS new_array
FROM table
GROUP BY column_1


Перед тем как решать задачу, попробуйте сначала выполнить простое упражнение: разверните списки с id товаров, поместите результат в подзапрос, а потом сразу же сверните всё обратно в списки с помощью array_agg. Алгоритм решения этой задачи примерно такой же.
*/

SELECT
    o.order_id,
    ARRAY_AGG(p.name) AS product_names
FROM orders o
CROSS JOIN UNNEST(o.product_ids) AS pl(product_id)
INNER JOIN products p
    ON p.product_id = pl.product_id
GROUP BY
    o.order_id
LIMIT 1000;