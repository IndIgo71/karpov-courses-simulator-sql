/*
На основе данных в таблице user_actions рассчитайте показатель дневного Retention для всех пользователей, разбив их на когорты по дате первого взаимодействия с нашим приложением.

В результат включите четыре колонки: месяц первого взаимодействия, дату первого взаимодействия, количество дней, прошедших с даты первого взаимодействия (порядковый номер дня начиная с 0), и само значение Retention.
Колонки со значениями назовите соответственно start_month, start_date, day_number, retention.

Метрику необходимо выразить в виде доли, округлив полученные значения до двух знаков после запятой.
Месяц первого взаимодействия укажите в виде даты, округлённой до первого числа месяца.
Результат должен быть отсортирован сначала по возрастанию даты первого взаимодействия, затем по возрастанию порядкового номера дня.
Поля в результирующей таблице: start_month, start_date, day_number, retention

Алгоритм расчёта Retention

Сначала для каждого пользователя посчитайте дату самого первого действия в приложении (это можно сделать с помощью оконной функции). 
Затем сделайте группировку по двум полям: дате первого действия и каждой дате, представленной в данных. 
Далее по сгруппированным данным в каждый из дней посчитайте количество уникальных пользователей с определённой датой первого действия. 
После этого для каждой пары "дата первого взаимодействия - дата" необходимо посчитать сам Retention, то есть долю уникальных пользователей в общем числе пользователей в когорте (число пользователей в нулевой день). 
Затем останется только извлечь месяц из дат и вычислить разницу в днях между каждой датой и датой первого взаимодействия.
*/

WITH
    cte_user_dates as (
        SELECT
            user_id, 
            MIN(time::date) OVER (PARTITION BY user_id) AS start_date, 
            time::date AS date
        FROM user_actions
    )
SELECT
    DATE_TRUNC('month', start_date)::date AS start_month,
    start_date,
    date - start_date AS day_number,
    ROUND(
        COUNT(DISTINCT user_id)::DECIMAL / MAX(COUNT(DISTINCT user_id)) OVER (PARTITION BY start_date),
        2
    ) AS retention
FROM cte_user_dates
GROUP BY
    start_date,
    date
ORDER BY
    start_date;